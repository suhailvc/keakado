# Define the global platform for your project
platform :ios, '14.0'

# Disable CocoaPods analytics to reduce build latency
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Set the project configuration
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Flutter CocoaPods setup
flutter_ios_podfile_setup

# Define the main target
target 'Runner' do
  use_frameworks!   # Required for Swift-based dependencies
  use_modular_headers! # Optional, based on plugin requirements

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# Post-install configuration
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # Enforce iOS 14 minimum deployment target for all dependencies
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
    end

    # Resolve issues with duplicated architectures (optional)
    target.build_configurations.each do |config|
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
end
